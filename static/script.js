document.getElementById("searchForm").addEventListener("submit", function(event) {
    event.preventDefault();
    
    let teamName = document.getElementById("teamName").value;

    fetch("/search", {
        method: "POST",
        body: new URLSearchParams({ "team_name": teamName }),
        headers: { "Content-Type": "application/x-www-form-urlencoded" }
    })
    .then(response => response.json())
    .then(data => {
        let resultDiv = document.getElementById("result");

        if (data.error) {
            resultDiv.innerHTML = `<p style="color:red;">${data.error}</p>`;
        } else {
            let html = `<h2>R√©sultats pour ${teamName}</h2>`;

            // Performances sous forme de tableau
            html += `
                <h3>üìä Performances :</h3>
                <table border="1" cellspacing="0" cellpadding="5">
                    <thead>
                        <tr>
                            <th>Nom</th>
                            <th>Ann√©e</th>
                            <th>Victoires</th>
                            <th>D√©faites</th>
                        </tr>
                    </thead>
                    <tbody>
            `;
            data.data.forEach(team => {
                html += `
                    <tr>
                        <td>${team.Nom}</td>
                        <td>${team.Ann√©e}</td>
                        <td>${team.Victoires}</td>
                        <td>${team.D√©faites}</td>
                    </tr>
                `;
            });
            html += `</tbody></table>`;

            // Bouton de t√©l√©chargement CSV
            html += `<button id="downloadCSV" style="margin-top: 10px;">üì• T√©l√©charger les R√©sultats (CSV)</button>`;

            // Statistiques g√©n√©rales
            html += `<h3>üìä Statistiques :</h3>
            <table border="1">
                <thead>
                    <tr>
                        <th>Statistique</th>
                        <th>Count</th>
                        <th>Mean</th>
                        <th>Min</th>
                        <th>25%</th>
                        <th>50%</th>
                        <th>75%</th>
                        <th>Max</th>
                        <th>Std</th>
                    </tr>
                </thead>
                <tbody>`;

            Object.entries(data.statistiques).forEach(([stat, values]) => {
                html += `
                    <tr>
                        <td>${stat}</td>
                        <td>${values.count || '-'}</td>
                        <td>${values.mean.toFixed(2)}</td>
                        <td>${values.min}</td>
                        <td>${values["25%"]}</td>
                        <td>${values["50%"]}</td>
                        <td>${values["75%"]}</td>
                        <td>${values.max}</td>
                        <td>${values.std.toFixed(2)}</td>
                    </tr>`;
            });

            html += `</tbody></table>`;


            // Meilleure ann√©e sous forme de tableau
            html += `
                <h3>üèÜ Meilleure Ann√©e :</h3>
                <table border="1" cellspacing="0" cellpadding="5">
                    <thead>
                        <tr>
                            <th>Ann√©e</th>
                            <th>Win %</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>${data.meilleure_ann√©e.Ann√©e}</td>
                            <td>${data.meilleure_ann√©e["Win %"].toFixed(3)}</td>
                        </tr>
                    </tbody>
                </table>
            `;

            // Corr√©lation sous forme de tableau
            html += `
                <h3>üìà Corr√©lation :</h3>
                <table border="1" cellspacing="0" cellpadding="5">
                    <thead>
                        <tr>
                            <th>Relation</th>
                            <th>Valeur</th>
                        </tr>
                    </thead>
                    <tbody>
            `;

            Object.entries(data.corr√©lation).forEach(([relation, valeur]) => {
                html += `
                    <tr>
                        <td>${relation}</td>
                        <td>${valeur.toFixed(3)}</td>
                    </tr>
                `;
            });
            html += `</tbody></table>`;

            // √âvolution des performances sous forme de tableau
            html += `
                <h3>üîÑ √âvolution des Performances :</h3>
                <table border="1" cellspacing="0" cellpadding="5">
                    <thead>
                        <tr>
                            <th>Ann√©e</th>
                            <th>Win %</th>
                        </tr>
                    </thead>
                    <tbody>
            `;
            data.√©volution_performance.forEach(entry => {
                html += `
                    <tr>
                        <td>${entry.Ann√©e}</td>
                        <td>${entry["Win %"]}</td>
                    </tr>
                `;
            });
            html += `</tbody></table>`;

            // Meilleures √©quipes sous forme de tableau
            html += `
                <h3>ü•á Meilleures √âquipes :</h3>
                <table border="1" cellspacing="0" cellpadding="5">
                    <thead>
                        <tr>
                            <th>√âquipe</th>
                            <th>Win %</th>
                        </tr>
                    </thead>
                    <tbody>
            `;

            Object.entries(data.meilleures_equipes).forEach(([team, winRate]) => {
                html += `
                    <tr>
                        <td>${team}</td>
                        <td>${winRate.toFixed(3)}</td>
                    </tr>
                `;
            });
            html += `</tbody></table>`;

            // Comparaison avec d'autres √©quipes sous forme de tableau
            html += `
                <h3>üîÑ Comparaison avec d'autres √©quipes :</h3>
                <table border="1" cellspacing="0" cellpadding="5">
                    <thead>
                        <tr>
                            <th>Nom</th>
                            <th>Ann√©e</th>
                            <th>Win %</th>
                        </tr>
                    </thead>
                    <tbody>
            `;
            data.comparaison_√©quipes.forEach(entry => {
                html += `
                    <tr>
                        <td>${entry.Nom}</td>
                        <td>${entry.Ann√©e}</td>
                        <td>${entry["Win %"]}</td>
                    </tr>
                `;
            });
            html += `</tbody></table>`;

            // Graphiques associ√©s
            html += `<h3>üì∏ Graphiques :</h3>`;
            let imageBaseName = teamName.replace(/ /g, '_').toLowerCase();
            const images = [
                `${imageBaseName}_goals.png`,
                `${imageBaseName}_goals_vs_wins_scatter.png`,
                `${imageBaseName}_performance_distribution.png`,
                `${imageBaseName}_performance_heatmap.png`,
                `${imageBaseName}_wins.png`,
                `${imageBaseName}_wins_boxplot.png`
            ];

            images.forEach(image => {
                html += `<div><img src="graphs/${image}" alt="${image}"></div>`;
            });

            resultDiv.innerHTML = html;

            // Ajouter l'√©v√©nement au bouton de t√©l√©chargement CSV
            document.getElementById("downloadCSV").addEventListener("click", function() {
                downloadCSV(data.data, teamName);
            });
        }
    })
    .catch(error => console.error("Erreur:", error));
});

// Fonction pour g√©n√©rer et t√©l√©charger le CSV
function downloadCSV(data, teamName) {
    let csvContent = "data:text/csv;charset=utf-8,Nom,Ann√©e,Victoires,D√©faites\n";
    data.forEach(team => {
        csvContent += `${team.Nom},${team.Ann√©e},${team.Victoires},${team.D√©faites}\n`;
    });

    let encodedUri = encodeURI(csvContent);
    let link = document.createElement("a");
    link.setAttribute("href", encodedUri);
    link.setAttribute("download", `hockey_stats_${teamName.replace(/\s+/g, '_').toLowerCase()}.csv`);
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
}
